# Simple Comment

-- Input
; a comment
-- Input

-- Expected
(source 0..11
  (comment 0..11 '; a comment'))
-- Expected

# Two semicolons

-- Input
;; another comment
-- Input

-- Expected
(source 0..18
  (comment 0..18 ';; another comment'))
-- Expected

# Multiple lines

-- Input
;; first line
;; second line
-- Input

-- Expected
(source 0..28
  (comment 0..13 ';; first line')
  (comment 14..28 ';; second line'))
-- Expected

# Discard Number

-- Input
#_123
-- Input

-- Expected
(source 0..5
  (discard 0..5
    (marker 0..2 '#_')
    (.body 2..5
      (token 2..5 '123'))))
-- Expected

# Discard Number, with space

-- Input
#_ 1
-- Input

-- Expected
(source 0..4
  (discard 0..4
    (marker 0..2 '#_')
    (.body 3..4
      (token 3..4 '1'))))
-- Expected

# Discard Number, multiline

-- Input
#_
1
-- Input

-- Expected
(source 0..4
  (discard 0..4
    (marker 0..2 '#_')
    (.body 3..4
      (token 3..4 '1'))))
-- Expected

# Discard List

-- Input
#_ (+ 1 1)
-- Input

-- Expected
(source 0..10
  (discard 0..10
    (marker 0..2 '#_')
    (.body 3..10
      (parens 3..10
        (.open 3..4 '(')
        (.body 4..9
          (token 4..5 '+')
          (token 6..7 '1')
          (token 8..9 '1'))
        (.close 9..10 ')')))))
-- Expected

# Discard Map

-- Input
#_ {:a 1
    :b 2}
-- Input

-- Expected
(source 0..18
  (discard 0..18
    (marker 0..2 '#_')
    (.body 3..18
      (braces 3..18
        (.open 3..4 '{')
        (.body 4..17
          (token 4..6 ':a')
          (token 7..8 '1')
          (token 13..15 ':b')
          (token 16..17 '2'))
        (.close 17..18 '}')))))
-- Expected

# Discard Multiple

-- Input
#_#_1 2
-- Input

-- Expected
(source 0..7
  (discard 0..7
    (marker 0..2 '#_')
    (discard 2..5
      (marker 2..4 '#_')
      (.body 4..5
        (token 4..5 '1')))
    (.body 6..7
      (token 6..7 '2'))))
-- Expected

# Discard Multiple, nested

-- Input
(let [x 1
      #_ #_ y 2]
  (+ x 2))
-- Input

-- Expected
(source 0..37
  (parens 0..37
    (.open 0..1 '(')
    (.body 1..36
      (token 1..4 'let')
      (brackets 5..26
        (.open 5..6 '[')
        (.body 6..25
          (token 6..7 'x')
          (token 8..9 '1')
          (discard 16..25
            (marker 16..18 '#_')
            (discard 19..23
              (marker 19..21 '#_')
              (.body 22..23
                (token 22..23 'y')))
            (.body 24..25
              (token 24..25 '2'))))
        (.close 25..26 ']'))
      (parens 29..36
        (.open 29..30 '(')
        (.body 30..35
          (token 30..31 '+')
          (token 32..33 'x')
          (token 34..35 '2'))
        (.close 35..36 ')')))
    (.close 36..37 ')')))
-- Expected
