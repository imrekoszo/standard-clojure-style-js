# Empty Map

-- Input
{}
-- Input

-- Expected
(source 0..2
  (braces 0..2
    (.open 0..1 '{')
    (.close 1..2 '}')))
-- Expected

# Simple Map

-- Input
{:a 1 :b 2}
-- Input

-- Expected
(source 0..11
  (braces 0..11
    (.open 0..1 '{')
    (.body 1..10
      (token 1..3 ':a')
      (token 4..5 '1')
      (token 6..8 ':b')
      (token 9..10 '2'))
    (.close 10..11 '}')))
-- Expected

# Deeper Map

-- Input
{:paths ["src"]
 :deps {clj-kondo/clj-kondo {:mvn/version "2020.09.09"}}}
-- Input

-- Expected
(source 0..73
  (braces 0..73
    (.open 0..1 '{')
    (.body 1..72
      (token 1..7 ':paths')
      (brackets 8..15
        (.open 8..9 '[')
        (.body 9..14
          (string 9..14
            (.open 9..10 '"')
            (.body 10..13 'src')
            (.close 13..14 '"')))
        (.close 14..15 ']'))
      (token 17..22 ':deps')
      (braces 23..72
        (.open 23..24 '{')
        (.body 24..71
          (token 24..43 'clj-kondo/clj-kondo')
          (braces 44..71
            (.open 44..45 '{')
            (.body 45..70
              (token 45..57 ':mvn/version')
              (string 58..70
                (.open 58..59 '"')
                (.body 59..69 '2020.09.09')
                (.close 69..70 '"')))
            (.close 70..71 '}')))
        (.close 71..72 '}')))
    (.close 72..73 '}')))
-- Expected

# Map with Comma

-- Input
{:x 1,
 :y 2}
-- Input

-- Expected
(source 0..13
  (braces 0..13
    (.open 0..1 '{')
    (.body 1..12
      (token 1..3 ':x')
      (token 4..5 '1')
      (token 8..10 ':y')
      (token 11..12 '2'))
    (.close 12..13 '}')))
-- Expected

# Empty Set

-- Input
#{}
-- Input

-- Expected
(source 0..3
  (braces 0..3
    (.open 0..2 '#{')
    (.close 2..3 '}')))
-- Expected

# Simple Set

-- Input
#{:i :j :k}
-- Input

-- Expected
(source 0..11
  (braces 0..11
    (.open 0..2 '#{')
    (.body 2..10
      (token 2..4 ':i')
      (token 5..7 ':j')
      (token 8..10 ':k'))
    (.close 10..11 '}')))
-- Expected

# Nested Sets

-- Input
#{#{1} #{#{0} 2}}
-- Input

-- Expected
(source 0..17
  (braces 0..17
    (.open 0..2 '#{')
    (.body 2..16
      (braces 2..6
        (.open 2..4 '#{')
        (.body 4..5
          (token 4..5 '1'))
        (.close 5..6 '}'))
      (braces 7..16
        (.open 7..9 '#{')
        (.body 9..15
          (braces 9..13
            (.open 9..11 '#{')
            (.body 11..12
              (token 11..12 '0'))
            (.close 12..13 '}'))
          (token 14..15 '2'))
        (.close 15..16 '}')))
    (.close 16..17 '}')))
-- Expected
